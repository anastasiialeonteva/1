syntax = "proto3";

package ets;

import "proto/common/deal.proto";
import "proto/common/instrument.proto";
import "proto/common/instrument_type.proto";
import "proto/common/order.proto";
import "proto/common/schedule.proto";
import "proto/common/trade_mode.proto";
import "proto/common/trade_period.proto";
import "proto/ets/calculated_price.proto";
import "proto/ets/client.proto";
import "proto/ets/depersonalized_deal.proto";
import "proto/ets/errors.proto";
import "proto/ets/market_indicators.proto";
import "proto/ets/order_book_quotation.proto";
import "proto/ets/organization.proto";
import "proto/ets/positional_register.proto";
import "proto/ets/user.proto";

option go_package = "github.com/tarantool/spbmtsb-contracts/ets";
option java_package = "io.tarantool.spbmtsb.contracts.ets";

// Сервер Доступа (Синхронный интерфейс доступа)
service SyncAccessService {

  // Фиксация новой заявки ("подача новой заявки")
  rpc NewOrder(NewOrderRequest) returns (NewOrderResponse);

// Запрос на фиксацию новой заявки
message NewOrderRequest {

  // Идентификатор запроса на фиксацию новой заявки
  // Проверка ТЗ май 23 - новое поле (п.5.2)
  int64 id = 1;

  // Торговый код инструмента
  string instrument_trade_code = 2;

  // Код режима торгов
  common.TradeModeCode trade_mode_code = 3;

  // Код торгового периода
  common.TradePeriodCode trade_period_code = 4;

  // Идентификатор позиционного регистра
  string positional_register_id = 5;

  // Идентификатор позиционного регистра стороны поставки
  optional string delivery_positional_register_id = 6;

  // Направленность: покупка/продажа
  common.OrderDirection direction = 7;

  // Идентификатор места поставки
  optional string delivery_place_id = 8;

  // Цена; значение с точностью, установленной в атрибуте <шаг цены> для инструмента
  int64 price = 9;

  // Объем в лотах
  int64 volume_in_lots = 10;

  // Вид заявки
  common.OrderType type = 11;

  // Условие исполнения
  common.OrderExecutionCondition execution_condition = 12;

  // Кодовое слово
  optional string keyword = 13;
  
  // Идентификатор пользователя
  string user_id = 14;

  // Примечание
  optional string note = 15;

  // Код признака сделки
  optional common.DealCode dealcode = 16;

}

// Ответ на запрос фиксации новой заявки
message NewOrderResponse {
  oneof response {
    // Ответ в случае успешной фиксации заявки
    NewOrderSuccessResponse success = 1;

    // Ответ в случае ошибки при фиксации заявки
    EtsErrorResponse error = 2;
  }
}

// Ответ в случае успешной фиксации заявки
message NewOrderSuccessResponse {
  
  // Идентификатор запроса на фиксацию новой заявки
  // Проверка ТЗ май 23 - новое поле (п.5.3)
  int64 request_id = 1;
  
  // Идентификатор ответа на фиксацию новой заявки
  // Проверка ТЗ май 23 - новое поле (п.5.2)
  int64 id = 2;
  
  // Время получения запроса 
  google.protobuf.Timestamp fixed_at = 3;
  
  // Статус выполнения
  bool success = 4;
  
  // Уникальный код (идентификатор) заявки
  string order_id = 5;

}

